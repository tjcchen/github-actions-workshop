## Vercel Integration:
## Set up a Vercel account and create a Next.js project on Vercel.
## Obtain your Vercel API token, organization ID, and project ID.
## In your GitHub repository, go to "Settings" -> "Secrets" and add the following secrets:
##   - VERCEL_TOKEN: Your Vercel API token.
##   - VERCEL_ORG_ID: Your Vercel organization ID.
##   - VERCEL_PROJECT_ID: Your Vercel project ID.
##
## Explanation:
## - This workflow triggers on every push to the main branch.
## - The build job checks out the code, sets up Node.js, installs dependencies, and builds the Next.js app.
## - The deploy job, which depends on the build job, deploys the built app to Vercel using the Vercel GitHub Action.
## - Make sure to customize this script according to your project structure, testing requirements, and any additional steps needed for your deployment. Also, consider security and best practices for handling secrets in your CI/CD pipeline.

name: Next.js CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Install dependencies
        run: npm install

      - name: Build Next.js app
        run: npm run build
  
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
